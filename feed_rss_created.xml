<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>langroid</title><description>Langroid LLM App Development Framework</description><link>https://langroid.github.io/langroid/</link><atom:link href="https://langroid.github.io/langroid/feed_rss_created.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/langroid/langroid</docs><language>en</language> <pubDate>Sun, 12 Oct 2025 09:31:45 -0000</pubDate> <lastBuildDate>Sun, 12 Oct 2025 09:31:45 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.17.1</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>langroid</title><link>https://langroid.github.io/langroid/</link> </image> <item> <title>Multi Agent Debate and Education Platform</title> <author>Adam Shams</author> <category>chat</category> <category>langroid</category> <category>llm</category> <category>local-llm</category> <description>&lt;h2&gt;Introduction&lt;/h2&gt;&lt;p&gt;Have you ever imagined a world where we can debate complex issues with Generative AI agents taking a distinct stance and backing their arguments with evidence? Some will change your mind, and some will reveal the societal biases on which each distinctive Large Language Model (LLM) is trained on. Introducing an &lt;a href=&#34;https://github.com/langroid/langroid/tree/main/examples/multi-agent-debate&#34;&gt;AI-powered debate platform&lt;/a&gt; that brings this imagination to reality, leveraging diverse LLMs and the Langroid multi-agent programming framework. The system enables users to engage in structured debates with an AI taking the opposite stance (or even two AIs debating each other), using a multi-agent architecture with Langroid&#39;s powerful framework, where each agent embodies a specific ethical perspective, creating realistic and dynamic interactions. Agents are prompt-engineered and role-tuned to align with their assigned ethical stance, ensuring thoughtful and structured debates. &lt;/p&gt;</description><link>https://langroid.github.io/langroid/blog/2025/02/04/multi-agent-debate-and-education-platform/</link> <pubDate>Tue, 04 Feb 2025 00:00:00 +0000</pubDate><source url="https://langroid.github.io/langroid/feed_rss_created.xml">langroid</source><guid isPermaLink="true">https://langroid.github.io/langroid/blog/2025/02/04/multi-agent-debate-and-education-platform/</guid> </item> <item> <title>Overview of Langroid&#39;s Multi-Agent Architecture (prelim)</title> <author>Prasad Chalasani</author> <author>Nils Palumbo</author> <author>Jihye Choi</author> <author>Somesh Jha</author> <category>langroid</category> <category>llm</category> <category>multi-agent</category> <description>&lt;h2&gt;Agent, as an intelligent message transformer&lt;/h2&gt;&lt;p&gt;A natural and convenient abstraction in designing a complexLLM-powered system is the notion of an &lt;em&gt;agent&lt;/em&gt; that is instructed to be responsible for a specific aspect of the overall task. In terms of code, an &lt;em&gt;Agent&lt;/em&gt; is essentially a class representing an intelligent entity that can respond to &lt;em&gt;messages&lt;/em&gt;, i.e., an agent is simply a &lt;em&gt;message transformer&lt;/em&gt;.An agent typically encapsulates an (interface to an) LLM, and may also be equipped with so-called &lt;em&gt;tools&lt;/em&gt; (as described below) and &lt;em&gt;external documents/data&lt;/em&gt; (e.g., via a vector database, as described below).Much like a team of humans, agents interact by exchanging messages, in a manner reminiscent of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Actor_model&#34;&gt;&lt;em&gt;actor framework&lt;/em&gt;&lt;/a&gt; in programming languages.An &lt;em&gt;orchestration mechanism&lt;/em&gt; is needed to manage the flow of messages between agents, to ensure that progress is made towards completion of the task, and to handle the inevitable cases where an agent deviates from instructions.Langroid is founded on this &lt;em&gt;multi-agent programming&lt;/em&gt; paradigm, where agents are first-class citizens, acting as message transformers, and communicate by exchanging messages.&lt;/p&gt;</description><link>https://langroid.github.io/langroid/blog/2024/08/15/overview-of-langroids-multi-agent-architecture-prelim/</link> <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate><source url="https://langroid.github.io/langroid/feed_rss_created.xml">langroid</source><guid isPermaLink="true">https://langroid.github.io/langroid/blog/2024/08/15/overview-of-langroids-multi-agent-architecture-prelim/</guid> </item> <item> <title>MALADE: Multi-Agent Architecture for Pharmacovigilance</title> <author>Jihye Choi</author> <author>Nils Palumbo</author> <author>Prasad Chalasani</author> <author>Matthew Engelhard</author> <author>Somesh Jha</author> <author>Anivarya Kumar</author> <author>David Page</author> <category>langroid</category> <category>multi-agent</category> <category>neo4j</category> <category>rag</category> <description>&lt;h1&gt;MALADE: Multi-Agent Architecture for Pharmacovigilance&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://www.mlforhc.org/2024-abstracts&#34;&gt;Published in ML for HealthCare 2024&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2408.01869&#34;&gt;Arxiv&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/jihyechoi77/malade&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;Summary&lt;/h2&gt;&lt;p&gt;We introduce MALADE (&lt;strong&gt;M&lt;/strong&gt;ultiple &lt;strong&gt;A&lt;/strong&gt;gents powered by &lt;strong&gt;L&lt;/strong&gt;LMs for &lt;strong&gt;ADE&lt;/strong&gt; Extraction),a multi-agent system for Pharmacovigilance. It is the first effective explainable multi-agent LLM system for extracting Adverse Drug Events (ADEs) from FDA drug labels and drug prescription data.&lt;/p&gt;</description><link>https://langroid.github.io/langroid/blog/2024/08/12/malade-multi-agent-architecture-for-pharmacovigilance/</link> <pubDate>Mon, 12 Aug 2024 00:00:00 +0000</pubDate><source url="https://langroid.github.io/langroid/feed_rss_created.xml">langroid</source><guid isPermaLink="true">https://langroid.github.io/langroid/blog/2024/08/12/malade-multi-agent-architecture-for-pharmacovigilance/</guid> </item> <item> <title>Langroid: Knolwedge Graph RAG powered by Neo4j</title> <author>Mohannad Alhanahnah</author> <category>knowledge-graph</category> <category>langroid</category> <category>neo4j</category> <category>rag</category> <description>&lt;h2&gt;&#34;Chat&#34; with various sources of information&lt;/h2&gt;&lt;p&gt;LLMs are increasingly being used to let users converse in natural language with a variety of types of data sources:&lt;/p&gt;</description><link>https://langroid.github.io/langroid/blog/2024/01/18/langroid-knolwedge-graph-rag-powered-by-neo4j/</link> <pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><source url="https://langroid.github.io/langroid/feed_rss_created.xml">langroid</source><guid isPermaLink="true">https://langroid.github.io/langroid/blog/2024/01/18/langroid-knolwedge-graph-rag-powered-by-neo4j/</guid> </item> <item> <title>Language Models: Completion and Chat-Completion</title> <author>Prasad Chalasani</author> <category>chat</category> <category>langroid</category> <category>llm</category> <category>local-llm</category> <description>&lt;p&gt;Transformer-based language models are fundamentally next-token predictors, so naturally all LLM APIs today at least provide a completion endpoint. If an LLM is a next-token predictor, how could it possibly be used to generate a response to a question or instruction, or to engage in a conversation with a human user? This is where the idea of &#34;chat-completion&#34; comes in.This post is a refresher on the distinction between completion and chat-completion,and some interesting details on how chat-completion is implemented in practice.&lt;/p&gt;</description><link>https://langroid.github.io/langroid/blog/2023/09/19/language-models-completion-and-chat-completion/</link> <pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><source url="https://langroid.github.io/langroid/feed_rss_created.xml">langroid</source><guid isPermaLink="true">https://langroid.github.io/langroid/blog/2023/09/19/language-models-completion-and-chat-completion/</guid> </item> <item> <title>Using Langroid with Local LLMs</title> <author>Prasad Chalasani</author> <category>langroid</category> <category>llm</category> <category>local-llm</category> <description>&lt;h2&gt;Why local models?&lt;/h2&gt;&lt;p&gt;There are commercial, remotely served models that currently appear to beat all open/localmodels. So why care about local models? Local models are exciting for a number of reasons:&lt;/p&gt;</description><link>https://langroid.github.io/langroid/blog/2023/09/14/using-langroid-with-local-llms/</link> <pubDate>Thu, 14 Sep 2023 00:00:00 +0000</pubDate><source url="https://langroid.github.io/langroid/feed_rss_created.xml">langroid</source><guid isPermaLink="true">https://langroid.github.io/langroid/blog/2023/09/14/using-langroid-with-local-llms/</guid> </item> <item> <title>Langroid: Harness LLMs with Multi-Agent Programming</title> <author>Prasad Chalasani</author> <category>langroid</category> <category>llm</category> <description>&lt;h1&gt;Langroid: Harness LLMs with Multi-Agent Programming&lt;/h1&gt;&lt;h2&gt;The LLM Opportunity&lt;/h2&gt;&lt;p&gt;Given the remarkable abilities of recent Large Language Models (LLMs), thereis an unprecedented opportunity to build intelligent applications powered bythis transformative technology. The top question for any enterprise is: howbest to harness the power of LLMs for complex applications? For technical andpractical reasons, building LLM-powered applications is not as simple asthrowing a task at an LLM-system and expecting it to do it.&lt;/p&gt;</description><link>https://langroid.github.io/langroid/blog/2023/09/03/langroid-harness-llms-with-multi-agent-programming/</link> <pubDate>Sun, 03 Sep 2023 00:00:00 +0000</pubDate><source url="https://langroid.github.io/langroid/feed_rss_created.xml">langroid</source><guid isPermaLink="true">https://langroid.github.io/langroid/blog/2023/09/03/langroid-harness-llms-with-multi-agent-programming/</guid> </item> </channel></rss>