[tool.poetry]
name = "langroid"
version = "0.1.30"
description = "Harness LLMs with Multi-Agent Programming"
authors = ["Prasad Chalasani <pchalasani@gmail.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12"
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.5"
mkdocstrings = {extras = ["python"], version = "^0.21.2"}
mkdocs-awesome-pages-plugin = "^2.8.0"
mkdocs-gen-files = "^0.4.0"
mkdocs-literate-nav = "^0.6.0"
mkdocs-section-index = "^0.3.5"
mkdocs-jupyter = "^0.24.1"
chromadb = "^0.3.21"
fire = "^0.5.0"
black = {extras = ["jupyter"], version = "^23.3.0"}
flake8 = "^6.0.0"
mypy = "^1.2.0"
bs4 = "^0.0.1"
autopep8 = "^2.0.2"
python-dotenv = "^1.0.0"
wget = "^3.2"
rich = "^13.3.4"
requests-oauthlib = "^1.3.1"
trafilatura = "^1.5.0"
halo = "^0.0.31"
typer = "^0.7.0"
colorlog = "^6.7.0"
openai = "^0.27.5"
tiktoken = "^0.3.3"
pygithub = "^1.58.1"
pygments = "^2.15.1"
redis = "^4.5.5"
fakeredis = "^2.12.1"
faker = "^18.9.0"
requests = "^2.31.0"
ruff = "^0.0.270"
pre-commit = "^3.3.2"
types-redis = "^4.5.5.2"
types-requests = "^2.31.0.1"
pyparsing = "^3.0.9"
nltk = "^3.8.1"

# optional; see extras section below
sentence-transformers = {version="2.2.2", optional=true}
torch = {version="2.0.0", optional=true}

qdrant-client = "^1.3.1"
pydantic = "1.10.11"
pypdf = "^3.12.2"
momento = "^1.7.0"
pandas = "^2.0.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
coverage = "^7.2.5"

[tool.poetry.extras]
# install these using `poetry install -E hf-embeddings`
hf-embeddings = ["sentence-transformers", "torch"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'

[tool.mypy]
python_version = "3.11"
#follow_imports = "skip"
#check_untyped_defs = "True"
disallow_untyped_defs = "True"
ignore_missing_imports = "True"
strict = true
exclude = [
    "docs", ".venv", "venv", "examples", "examples_dev", "langroid/utils/web",
    "notebooks",
    "langroid/parsing/repo_loader.py",
    "langroid/embedding_models/clustering.py",
]
files=["langroid/*"]
plugins = [
    "pydantic.mypy"
]

[tool.ruff]
line-length = 88
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Assume Python 3.11.
target-version = "py311"
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
]
exclude = ["docs", ".venv", "venv", "examples", "examples_dev", "langroid/utils/web", "notebooks"]
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []


[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning"]